{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react'\nimport type { CSSProperties } from 'react'\nimport './styles.scss'\n\ntype Props = {\n    open: boolean\n    onClose?: () => void\n    direction: 'left' | 'right' | 'top' | 'bottom'\n    lockBackgroundScroll?: boolean\n    children?: React.ReactNode\n    duration?: number\n    overlayOpacity?: number\n    overlayColor?: String\n    enableOverlay?: boolean\n    style?: React.CSSProperties\n    zIndex?: number\n    size?: number | string\n    className?: string\n    customIdSuffix?: string\n    overlayClassName?: string\n}\n\nconst getDirectionStyle = (\n    dir: string,\n    size?: number | string,\n): {} | React.CSSProperties => {\n    switch (dir) {\n        case 'left':\n            return {\n                top: 0,\n                left: 0,\n                transform: 'translate3d(-100%, 0, 0)',\n                width: size,\n                height: '100vh',\n            }\n        case 'right':\n            return {\n                top: 0,\n                right: 0,\n                transform: 'translate3d(100%, 0, 0)',\n                width: size,\n                height: '100vh',\n            }\n        case 'bottom':\n            return {\n                left: 0,\n                right: 0,\n                bottom: 0,\n                transform: 'translate3d(0, 100%, 0)',\n                width: '100%',\n                height: size,\n            }\n        case 'top':\n            return {\n                left: 0,\n                right: 0,\n                top: 0,\n                transform: 'translate3d(0, -100%, 0)',\n                width: '100%',\n                height: size,\n            }\n\n        default:\n            return {}\n    }\n}\n\nconst EZDrawer: React.FC<Props> = (props) => {\n    const {\n        open,\n        onClose = () => {},\n        children,\n        style,\n        enableOverlay = true,\n        overlayColor = '#000',\n        overlayOpacity = 0.4,\n        zIndex = 100,\n        duration = 500,\n        direction,\n        size = 250,\n        className,\n        customIdSuffix,\n        lockBackgroundScroll = false,\n        overlayClassName = '',\n    } = props\n\n    const bodyRef = useRef<HTMLBodyElement | null>(null)\n\n    useEffect(() => {\n        const updatePageScroll = () => {\n            bodyRef.current = window.document.querySelector('body')\n\n            if (bodyRef.current && lockBackgroundScroll) {\n                if (open) {\n                    bodyRef.current.style.overflow = 'hidden'\n                } else {\n                    bodyRef.current.style.overflow = ''\n                }\n            }\n        }\n\n        updatePageScroll()\n    }, [open])\n\n    const idSuffix = useMemo(() => {\n        return customIdSuffix || (Math.random() + 1).toString(36).substring(7)\n    }, [customIdSuffix])\n\n    const overlayStyles: CSSProperties = {\n        backgroundColor: `${overlayColor}`,\n        opacity: `${overlayOpacity}`,\n        zIndex: zIndex,\n    }\n\n    const drawerStyles: CSSProperties = {\n        zIndex: zIndex + 1,\n        transitionDuration: `${duration}ms`,\n        ...getDirectionStyle(direction, size),\n        ...style,\n    }\n\n    return (\n        <div id={'EZDrawer' + idSuffix} className='EZDrawer'>\n            <input\n                type='checkbox'\n                id={'EZDrawer__checkbox' + idSuffix}\n                className='EZDrawer__checkbox'\n                onChange={onClose}\n                checked={open}\n            />\n            <nav\n                role='navigation'\n                id={'EZDrawer__container' + idSuffix}\n                style={drawerStyles}\n                className={'EZDrawer__container ' + className}\n            >\n                {children}\n            </nav>\n            {enableOverlay && (\n                <label\n                    htmlFor={'EZDrawer__checkbox' + idSuffix}\n                    id={'EZDrawer__overlay' + idSuffix}\n                    className={'EZDrawer__overlay ' + overlayClassName}\n                    style={overlayStyles}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default EZDrawer\n"],"names":["getDirectionStyle","dir","size","top","left","transform","width","height","right","bottom","EZDrawer","props","open","onClose","children","style","enableOverlay","overlayColor","overlayOpacity","zIndex","duration","direction","className","customIdSuffix","lockBackgroundScroll","overlayClassName","bodyRef","useRef","useEffect","updatePageScroll","current","window","document","querySelector","overflow","idSuffix","useMemo","Math","random","toString","substring","overlayStyles","backgroundColor","opacity","drawerStyles","transitionDuration","React","id","type","onChange","checked","role","htmlFor"],"mappings":"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"}